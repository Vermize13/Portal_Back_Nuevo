version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: bugmgr-postgres
    environment:
      POSTGRES_DB: bugmgr
      POSTGRES_USER: bugmgr_user
      POSTGRES_PASSWORD: ${DB_PASSWORD:-change_this_password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bugmgr_user -d bugmgr"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bugmgr-network

  # BugMgr API
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bugmgr-api
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      ASPNETCORE_URLS: http://+:8080
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=bugmgr;Username=bugmgr_user;Password=${DB_PASSWORD:-change_this_password}"
      JwtSettings__SecretKey: ${JWT_SECRET_KEY:-your-secret-key-change-this-in-production-min-32-chars-long}
      JwtSettings__Issuer: BugMgrApi
      JwtSettings__Audience: BugMgrClient
      JwtSettings__ExpirationMinutes: 60
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bugmgr-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  bugmgr-network:
    driver: bridge
